Running for the first time
================================

Now that you have some configuration, it's time to run it. The above configuration should have had you either create a directory
or use a particular directory for configuration. Let's change our directory to that now if you aren't already there.

.. code-block:: shell

    cd <THE DIRECTORY YOU USED IN PREVIOUS STEPS>

.. tabs::

  .. group-tab:: Docker Install

    Your working directory should contain ``docker-compose.yml``. (It should not contain a folder named ``config``.
    Assuming you have just configured a program to monitor a serial port, you will need to add a few lines to your ``docker-compose.yml``.
    Make sure you add the ``cap_add`` and ``devices`` sections so it looks like this:

    .. code-block:: yaml

      version: '3.7'

      services:
        solarthing-main:
          image: 'ghcr.io/wildmountainfarms/solarthing:latest'
          container_name: solarthing-main
          restart: 'unless-stopped'
          command: run --base config/base.json
      # BEGIN ADD THESE LINES
      #    group_add: # this is only necessary if you are using a user other than root
      #      - dialout
          cap_add:
            - SYS_RAWIO
          devices:
            - '/dev/ttyUSB0:/dev/ttyUSB0'
      # END ADD THESE LINES
          volumes:
            - './main/config:/app/config:ro'
            - './main/logs:/app/logs'

    Now run:

    .. code-block:: shell

      sudo docker compose up

  .. group-tab:: Native Install

    OK, now our shell should look something like this (``custom_rover`` may be different):

    .. code-block:: console

        pi@raspberrypi:/opt/solarthing/program/custom_rover$

    Now, all we have to do is run this:

    .. code-block:: shell

        sudo -u solarthing ./run.sh

    Using ``sudo -u solarthing ...`` makes sure that the log files generated by SolarThing have correct file system ownership.

The program should start up and it will start outputting lots of messages to your screen. If you configured it correctly, after a second you will see
data from your device in a JSON format. Press ``CTRL+C`` to stop the program.
